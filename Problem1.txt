BEGIN TRANSACTION;

drop TABLE User;
drop TABLE Borrower;
drop TABLE Lender;
drop TABLE Intermediary; 
drop TABLE Loan;
drop TABLE Trust;
drop TABLE Deadline;
drop TABLE Repayment;
drop TABLE LoanRequest;
drop TABLE Commitment;
drop TABLE IsA;
drop TABLE requests;

CREATE TABLE User(
  userId INT PRIMARY KEY NOT NULL,
  name CHAR(64),
  address CHAR(64)
);

CREATE TABLE IsA(
  userId INT,
  FOREIGN KEY (userId) REFERENCES User(userId)
);

CREATE TABLE Borrower(
  userIdBorrower INT NOT NULL,
  FOREIGN KEY (userIdBorrower) REFERENCES IsA(userId)
);

CREATE TABLE Lender(
  userIdLender INT,
  FOREIGN KEY (userIdLender) REFERENCES IsA(userId)
);

CREATE TABLE Intermediary(
  userIdInter INT,
  FOREIGN KEY (userIdInter) REFERENCES IsA(userId)
);

CREATE TABLE Loan(
  loanDate DATE PRIMARY KEY,
  requestDate DATE,
  userIdInter INT,
	userIdBorrower INT.
  FOREIGN KEY (requestDate) REFERENCES LoanRequest(loanDate)
  FOREIGN KEY (userIdInter) REFERENCES Intermediary(userIdInter),
	FOREIGN KEY (userIdBorrower) REFERENCES Borrower(userIdBorrower)
);

CREATE TABLE Trust(
  userIdBorrower INT,
  value INT PRIMARY KEY,
  FOREIGN KEY (userIdBorrower) REFERENCES Borrower(userIdBorrower)
);

CREATE TABLE Deadline(
  deadline DATE,
  finalDate DATE PRIMARY KEY NOT NULL,
  loanDate DATE,
  FOREIGN KEY (loanDate) REFERENCES Loan(loanDate)
);

CREATE TABLE Repayment(
	date DATE PRIMARY KEY,
	amount DOUBLE,
	loanDate DATE,
	userIdBorrower INT,
	FOREIGN KEY (loanDate) REFERENCES Loan(loanDate),
	FOREIGN KEY (userIdBorrower) REFERENCES Loan(userIdBorrower)
);

CREATE TABLE LoanRequest(
  requestDate DATE PRIMARY KEY,
  deadline DATE,
  payDate DATE,
  amount DOUBLE,
  description CHAR(128),
  userIdBorrower INT,
  FOREIGN KEY (userIdBorrower) REFERENCES requests(userIdBorrower)
);

CREATE TABLE Commitment(
	amount DOUBLE PRIMARY KEY,
	userIdLender INT,
  FOREIGN KEY (userIdLender) REFERENCES Lender(userIdLender)
);



CREATE TABLE requests(
  value INT PRIMARY KEY,
  userIdBorrower INT,
  userIdLender INT,
  FOREIGN KEY (userIdBorrower) REFERENCES Borrower(userIdBorrower),
  FOREIGN KEY (userIdLender) REFERENCES Lender(userIdLender)
);

--------------------------------------------------------------------------------------
--
--               SQL PART OF PROBLEM 1
--
--------------------------------------------------------------------------------------

select *
FROM Repayment
WHERE userIdBorrower=42 AND amount>1000.00;

select address, SUM(amount)
FROM Repayment
GROUP BY address; 

select name
FROM Repayment A
WHERE 1=(SELECT COUNT(DISTINCT name)
         FROM Repayment B
	 WHERE A.address=B.address);

DELETE FROM Repayment A
WHERE amount=(SELECT SELECT(amount)
	      FROM Repayment B
	      WHERE B.userIdBorrower=A.userIdBorrower
	      AND B.requestDate=A.requestDate);
	      
COMMIT;
